<input placeholder='Firstname' onChange={(event) => {setFName(event.target.value )}}></input>
        <input placeholder='Lastname' onChange={(event) => {setLName(event.target.value)}}></input>
        <input placeholder='Room' onChange={(event) => (setRoom(event.target.value))}></input>
        <button onClick={createUser}>Create User</button>

        {users.map((user) => {
          return <div> 
          <h1>Name : {user.fname} {user.lname}</h1>
          <p>Room : {user.room}</p>
        </div>})}
## COMMAND INSIDE HTML TO VIEW LIST OF USERS ##



       {users.map((user) => {return(
        <div className="home-feature-card">
  <div className="home-container04">
    <img
      src="https://user-images.githubusercontent.com/11250/39013954-f5091c3a-43e6-11e8-9cac-37cf8e8c8e4e.jpg"
      alt="image"
      className="home-image"
    />
    <div className="home-container05">
      <h1 className="home-text">{user.fname} {user.lname}</h1>
      <div className="home-container06">
        <span className="home-text01"> Room : {user.room}</span>
      </div>
    </div>
  </div>
</div>);})}

pictureUrl: "https://profile.line-scdn.net/0h4oTCfGYYa0B5OnzwSuoVPwlqaCpaSzJSAg8jJR9uYCARXS8XBg4sI0puZidHDX8VVQ52ckQ_MiR1KRwmZ2yXdH4KNXdADCsUVl8hpw"

[Log] /static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg (bundle.js, line 200, x4)

[Log] {userId: "Ud5f778be380464afc109b77dd355eeeb", displayName: "Pü¶îüí®üí®", statusMessage: "ü§ê", pictureUrl: "https://profile.line-scdn.net/0h4oTCfGYYa0B5OnzwSu‚Ä¶0puZidHDX8VVQ52ckQ_MiR1KRwmZ2yXdH4KNXdADCsUVl8hpw"} (main.c281554e.js, line 2)






//Container Block

<div class="col-md-4 pb-1 pb-md-0 rcorners2">
          <div class="card">
			  <div class="card-body">
              <h5 class="card-title">Card title</h5>
				  <hr class="hr">
				  <button type="button" class="button-p3">Primary</button>
				  <button type="button" class="button-p2">Primary</button>
				  <button type="button" class="button-p1">Primary</button>
				  <p class="card-text">‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°.</p>
				  <img class="card-img-top" src="images/400X200.gif" alt="Card image cap">
            </div> 
          </div>
        </div>



// OLD FUNCTION APP


  const app = firebase.initializeApp(firebaseConfig)
  const [createFName, setFName] = React.useState("")
  const [createLName, setLName] = React.useState("")
  const [createRoom, setRoom] = React.useState("")
  
  const [users, setUsers] = React.useState([]);
  const [loader, setLoader] = React.useState(true)
  const db = getFirestore(app)
  const usersCollectionRef = collection(db,'users')


  ////////////LIFF LOGIN/////////
  const [pictureUrl, setPictureUrl] = useState(logo);
    const [idToken, setIdToken] = useState("");
    const [displayName, setDisplayName] = useState("");
    const [statusMessage, setStatusMessage] = useState("");
    const [userId, setUserId] = useState("");

    const logout = () => {
        liff.logout();
        window.location.reload();
    }

    const initLine = () => {
        liff.init({ liffId: '1657632240-qZ0KjWll' }, () => {
        if (liff.isLoggedIn()) {
            runApp();
        } else {
            console.log("Login Runs!!!");
            liff.login();
        }
        }, err => console.error(err));
    }

    const runApp = () => {
        //console.log("RUN APP runs!! (LIFF logged in)")
        const idToken = liff.getIDToken();
        setIdToken(idToken);
        liff.getProfile().then(profile => {
          setDisplayName(profile.displayName);
          setPictureUrl(profile.pictureUrl);
          console.log(profile.pictureUrl);
          setStatusMessage(profile.statusMessage);
          setUserId(profile.userId);
        }).catch(err => console.error(err));
      }
    
  ////////////CREATE USER//////////////
  const createUser = async () => {
    await addDoc(usersCollectionRef,{fname:createFName,lname:createLName,room:createRoom,register_time:Date.now()})
    window.location.reload();
  }
  ////// if work on specific record we gotta use doc to mention to specific doc and pass that as a param instead

  /////////////API GET UR DATA/////////////
  useEffect(() => {
    initLine();
    const getUsers = async () => {
      const data = await getDocs(usersCollectionRef)
      setUsers(data.docs.map((doc) => ({...doc.data(), id:doc.id})))
    };
    getUsers();
  }, [])
  ////////////RETURN HTML TAGS/////////////
  console.log("Returns actually runs !!");
  return (
    <div className="home-container">
      <BrowserRouter basename='/'>
      <Helmet>
        <title>Sturdy Grave Squirrel</title>
        <meta property="og:title" content="Gay Black Spiderman" />
      </Helmet>
      <div className="home-container01">
        <div className="home-container02">
          <Link to="/" className="home-navlink">
            <svg viewBox="0 0 1024 1024" className="home-icon">
              <path d="M810.667 725.333h-597.333c-47.061 0-85.333 38.272-85.333 85.333s38.272 85.333 85.333 85.333h597.333c47.061 0 85.333-38.272 85.333-85.333s-38.272-85.333-85.333-85.333z"></path>
              <path d="M810.667 426.667h-597.333c-47.061 0-85.333 38.272-85.333 85.333s38.272 85.333 85.333 85.333h597.333c47.061 0 85.333-38.272 85.333-85.333s-38.272-85.333-85.333-85.333z"></path>
              <path d="M810.667 128h-597.333c-47.061 0-85.333 38.272-85.333 85.333s38.272 85.333 85.333 85.333h597.333c47.061 0 85.333-38.272 85.333-85.333s-38.272-85.333-85.333-85.333z"></path>
            </svg>
          </Link>
        </div>
        <div>
        <input placeholder='Firstname' onChange={(event) => {setFName(event.target.value )}}></input>
        <input placeholder='Lastname' onChange={(event) => {setLName(event.target.value)}}></input>
        <input placeholder='Room' onChange={(event) => (setRoom(event.target.value))}></input>
        <button onClick={createUser}>Create User</button>
        </div>
        <div>
          <img src={pictureUrl} width="300px" height="300px" align="center"></img>
        <p style={{ textAlign: "left", marginLeft: "20%", marginRight: "20%", wordBreak: "break-all" }}><b>id token: </b> {idToken}</p>
    <p style={{ textAlign: "left", marginLeft: "20%", marginRight: "20%", wordBreak: "break-all" }}><b>display name: </b> {displayName}</p>
    <p style={{ textAlign: "left", marginLeft: "20%", marginRight: "20%", wordBreak: "break-all" }}><b>status message: </b> {statusMessage}</p>
    <p style={{ textAlign: "left", marginLeft: "20%", marginRight: "20%", wordBreak: "break-all" }}><b>user id: </b> {userId}</p>

    <button onClick={() => logout()} style={{ width: "100%", height: 30 }}>Logout</button>
    </div>
        {users.map((user) => {return(
        <div className="home-feature-card">
  <div className="home-container04">
    <img
      src="https://user-images.githubusercontent.com/11250/39013954-f5091c3a-43e6-11e8-9cac-37cf8e8c8e4e.jpg"
      alt="image"
      className="home-image"
    />
    <div className="home-container05">
      <h1 className="home-text">{user.fname} {user.lname}</h1>
      <div className="home-container06">
        <span className="home-text01"> Room : {user.room}</span>
      </div>
    </div>
  </div>
</div>);})}

        
        
       
      </div>
      </BrowserRouter>
    </div>
  );





class Post extends Component {
    constructor(props) {
        super(props);
        const [productName,setProductName] = useState("");
        const [productDesc,setProductDesc] = useState("");
        const [productPicURL,setProductPicURL] = useState("");
        const [productType,setProductType] = useState(true)

    }
    
    state = {
        productType:true,
        productName:"",


    }
    render() {
         
        return ( <body>
            <div class="container rcorners2 bg-light">
              <label for="Tpic"><h4>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h4></label><br/>
              <input type="text" cols="35" class="rcorners2" onChange={(event) => {this.setState({productName:event.target.value})}}/><br/><br/>
              <label for="Dcpt"><h4>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h4></label><br/>
              <textarea  cols="35" rows="2" class="rcorners2" onChange={(event) => {setProdctDesc(event.target.value);}} >
            </textarea>
                <div>
              <h5>Tags</h5>
                <label><input type="checkbox"></input> ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ </label>
                <label><input type="checkbox"></input> ‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ </label>
                
                </div>

            <div>
                <h5>Type</h5>
                <label><input type="radio" name="type" onChange={(event) => {this.setState({productType:!event.target.value});console.log(productType);}}/> ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠ </label>
                <label><input type="radio" name="type" onChange={(event) => {this.setState({productType:event.target.value});console.log(productType);}}/> ‡∏ï‡∏≤‡∏°‡∏´‡∏≤ </label>
            </div>
                      
              <label for="InImg"><h5>‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</h5></label>
              <br/>
                <input type="file" name="file" id="file"/>
                 <br/><br/>
              <button type="button" class="btn btn-primary-dark" align="center">Post</button>
            </div>
            
              </body> );
    }
}